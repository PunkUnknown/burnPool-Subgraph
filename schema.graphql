enum LastRebase {
	POSITIVE
	NEUTRAL
	NEGATIVE
	NONE
}

type Setting @entity {
	id: ID!
	epochs: BigInt!
	rewardBlockPeriod: BigInt!
	oracleBlockPeriod: BigInt!
	curveShifter: BigDecimal!
	initialRewardShare: BigDecimal!
	multiSigRewardShare: BigDecimal!
	lastRebase: LastRebase!
	mean: BigDecimal!
	deviation: BigDecimal!
	oneDivDeviationSqrtTwoPi: BigDecimal!
	twoDeviationSquare: BigDecimal!
	peakScaler: BigDecimal!
}

type RewardCycle @entity {
	id: ID!
	rewardShare: BigDecimal!
	debasePerEpoch: BigDecimal!
	rewardBlockPeriod: BigInt!
	oracleBlockPeriod: BigInt!
	oracleLastPrices: [BigDecimal!]
	oracleNextUpdates: [BigInt!]
	epochsToReward: BigInt!
	epochsRewarded: BigInt!
	couponsIssued: BigDecimal!
	rewardDistributionDisabled: Boolean!
	rewardDistributed: BigDecimal!
	distributions: [DistributionCycle!] @derivedFrom(field: "rewardCycle")
	users: [User!] @derivedFrom(field: "rewardCycle")
}

type ExpansionCycle @entity {
	id: ID!
	rewardAccrued: BigDecimal
	exchangeRate: [BigDecimal!]
	cycleExpansion: [BigDecimal!]
	curveValue: [BigDecimal!]
}

type DistributionCycle @entity {
	id: ID!
	rewardCycle: RewardCycle!
	exchangeRate: BigDecimal!
	poolTotalShare: BigDecimal!
	rewardRate: BigDecimal!
	periodFinish: BigInt!
	curveValue: BigDecimal!
}

type User @entity {
	id: ID!
	address: String!
	rewardCycle: RewardCycle!
	couponBalance: BigDecimal!
}
